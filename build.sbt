import com.lightbend.lagom.core.LagomVersion

organization in ThisBuild := "com.kevin"

// the Scala version that will be used for cross-compiled libraries
scalaVersion in ThisBuild := "2.13.1"

val postgresDriver             = "org.postgresql"               % "postgresql"                     % "42.2.8"
val macwire                    = "com.softwaremill.macwire"     %% "macros"                        % "2.3.3" % "provided"
val scalaTest                  = "org.scalatest"                %% "scalatest"                     % "3.1.1" % Test
val akkaDiscoveryKubernetesApi = "com.lightbend.akka.discovery" %% "akka-discovery-kubernetes-api" % "1.0.1"
val lagomScaladslAkkaDiscovery =
  "com.lightbend.lagom" %% "lagom-scaladsl-akka-discovery-service-locator" % LagomVersion.current

ThisBuild / scalacOptions ++= List("-encoding", "utf8", "-deprecation", "-feature", "-unchecked", "-Xfatal-warnings")

// def dockerSettings = Seq(
//   dockerUpdateLatest := true,
//   dockerBaseImage := "adoptopenjdk/openjdk8",
//   dockerUsername := sys.props.get("docker.username"),
//   dockerRepository := sys.props.get("docker.registry")
// )

// Update the version generated by sbt-dynver to remove any + characters, since these are illegal in docker tags
version in ThisBuild ~= (_.replace('+', '-'))
dynver in ThisBuild ~= (_.replace('+', '-'))

lazy val `blog-poc` = (project in file("."))
  .aggregate(`blog-api`, `blog-impl`)

lazy val `blog-api` = (project in file("blog-api"))
  .settings(
    libraryDependencies ++= Seq(
      lagomScaladslApi
    )
  )

lazy val `blog-impl` = (project in file("blog-impl"))
  .enablePlugins(LagomScala)
  .settings(
    libraryDependencies ++= Seq(
      lagomScaladslPersistenceJdbc,
      lagomScaladslKafkaBroker,
      lagomScaladslTestKit,
      macwire,
      scalaTest,
      postgresDriver,
      lagomScaladslAkkaDiscovery,
      akkaDiscoveryKubernetesApi
    )
  )
  // .settings(dockerSettings)
  .settings(lagomForkedTestSettings)
  .dependsOn(`blog-api`)

// The project uses PostgreSQL
lagomCassandraEnabled in ThisBuild := false

// Use Kafka server running in a docker container
lagomKafkaEnabled in ThisBuild := false
lagomKafkaPort in ThisBuild := 9092
